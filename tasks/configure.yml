---
- name: Add the gitlab-runner user to other groups
  become: true
  become_user: root
  ansible.builtin.user:
    name: '{{ gitlab_runner_runas }}'
    append: true
    groups: '{{ gitlab_runner_addl_groups | default([]) }}'

- name: Deleting from {{ gitlab_runner_runas }} users home directory
  become: true
  become_user: root
  with_items: '{{ gitlab_runner_profile_delete | default([]) }}'
  ansible.builtin.file:
    path: /home/{{ gitlab_runner_runas }}/{{ item }}
    state: absent

- name: Mkdir config and env directories
  become: true
  become_user: root
  with_items:
    - d: '{{ gitlab_runner_config_dir }}'
      m: '600'
  ansible.builtin.file:
    state: directory
    path: '{{ item.d }}'
    mode: '{{ item.m }}'

- name: Templatize environment...
  become: true
  become_user: root
  notify: Gitlab_runner_service_restart
  with_items:
    - t: gitlab-runner.env.j2
      d: '{{ gitlab_runner_config_dir }}'
      f: '{{ gitlab_runner_env_file }}'
      m: '644'
  ansible.builtin.template:
    src: '{{ item.t }}'
    dest: '{{ item.d }}/{{ item.f }}'
    mode: '{{ item.m }}'

- name: Establish global configs in config.toml
  become: true
  become_user: root
  notify: Gitlab_runner_service_restart
  with_items:
    - regex: '^concurrent'
      line: 'concurrent = {{ gitlab_runner_concurrent_runners_per_host | default(1) }}'
    - regex: '^check_interval'
      line: 'check_interval = {{ gitlab_runner_check_gitlab_new_builds_interval | default(0) }}'
  ansible.builtin.lineinfile:
    path: '{{ gitlab_runner_config_dir }}/{{ gitlab_runner_config_file }}'
    create: true
    mode: '600'
    regex: '{{ item.regex }}'
    line: '{{ item.line }}'
